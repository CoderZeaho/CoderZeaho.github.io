I"
<h3 id="数组用作函数参数有两种形式">数组用作函数参数有两种形式：</h3>
<p>一种是把数组元素（下标变量）作为实参使用；</p>

<p>一种是把数组名作为函数的形参和实参使用。</p>

<h4 id="1数组元素下标变量作为实参使用">1、数组元素（下标变量）作为实参使用</h4>
<p>数组元素作为函数实参使用与普通变量是完全相同的，在发生函数调用时，把作为实参的数组元素的值传给形参，只是“拷贝”实参中的变量的值，传送给形参，实现单向的值传送
<img src="https://upload-images.jianshu.io/upload_images/1712780-7604f5a89a0389f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1712780-0c3e72461b50aec2.png" /></p>

<h4 id="2数组名作为函数参数">2、数组名作为函数参数</h4>
<p>用数组名作为函数参数与用数组元素作实参有几点不同</p>

<ul>
  <li>
    <p>用数组元素作函数参数不要求形参也必须是数组，但是用数组名作函数参数时，则要求形参和相对应的实参都是类型相同的数组</p>
  </li>
  <li>
    <p>在C语言中，数组名除作为变量的标识符之外，数组名还代表了该数组在内存中的起始地址，当数组名作函数参数时，实参与形参之间不是“值传递”，而是“地址传递”，实参数组名将该数组的其实地址传给形参数组，两个数组共享一段内存单元，编译系统不再为形参数组分配存储单元。</p>
  </li>
  <li>
    <p>在变量做函数参数时，所进行的值传递是单向的。即只能从实参传向形参，不能从形参传回实参。</p>
  </li>
</ul>

<h4 id="3数组名作为函数参数注意事项">3、数组名作为函数参数注意事项</h4>
<ul>
  <li>
    <p>形参数组和实参数组类型必须一致，否则出错</p>
  </li>
  <li>
    <p>在函数形参表中，允许不给出形参数组的长度，或用一个变量来表示数组元素的个数</p>
  </li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>void xzh(int a[])
</code></pre></div></div>
<p>或写为</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>void xzh(int a[],int n)
</code></pre></div></div>

<p>n的值由主调函数的实参进行传递</p>

<p><del>所有的地址都占8个字节</del></p>

<ul>
  <li>形参数组和实参数组长度可以不相同，因为在调用时，只传递首地址而不检查形参数组的长度。</li>
</ul>

:ET